# Generated by Django 3.2.8 on 2021-11-24 11:07

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import inuits.files.validators
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('members', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseInsurance',
            fields=[
                ('id', models.AutoField(db_column='verzekeringsid', primary_key=True, serialize=False)),
                ('_status', models.IntegerField(blank=True, db_column='status', null=True)),
                ('invoice_number', models.IntegerField(blank=True, db_column='factuurnr', null=True)),
                ('invoice_date', models.DateTimeField(blank=True, db_column='facturatiedatum', null=True)),
                ('_group_group_admin_id', models.CharField(db_column='groepsnr', max_length=6)),
                ('_group_name', models.CharField(db_column='groepsnaam', max_length=50)),
                ('_group_location', models.CharField(db_column='groepsplaats', max_length=50)),
                ('total_cost', models.DecimalField(db_column='totkostprijs', decimal_places=2, max_digits=7, null=True)),
                ('comment', models.CharField(blank=True, db_column='opmerking', max_length=500)),
                ('vvks_comment', models.CharField(blank=True, db_column='vvksmopmerking', max_length=500)),
                ('_printed', models.CharField(db_column='afgedrukt', default='N', max_length=1)),
                ('_finished', models.CharField(db_column='afgewerkt', default='N', max_length=1)),
                ('_listed', models.CharField(db_column='lijstok', default='N', max_length=1)),
                ('created_on', models.DateTimeField(db_column='datumvaninvulling', null=True)),
                ('_start_date', models.DateTimeField(db_column='begindatum', null=True)),
                ('_end_date', models.DateTimeField(db_column='einddatum', null=True)),
                ('payment_date', models.DateTimeField(blank=True, db_column='betalingsdatum', null=True)),
            ],
            options={
                'db_table': 'vrzkverzekeringen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceType',
            fields=[
                ('id', models.IntegerField(db_column='verzekeringstypeid', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='verzekeringstype', max_length=30)),
                ('description', models.CharField(db_column='verzekeringstypeomschr', max_length=50)),
                ('max_term', models.CharField(db_column='maxtermijn', max_length=10)),
            ],
            options={
                'db_table': 'vrzkverzekeringstypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NonMemberTemporaryInsurance',
            fields=[
                ('non_member_id', models.ForeignKey(db_column='nietledenid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='members.nonmember')),
            ],
            options={
                'db_table': 'vrzknietledentijd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParticipantTemporaryVehicleInsurance',
            fields=[
                ('participant', models.ForeignKey(db_column='bestuurderid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='members.nonmember')),
                ('type', models.CharField(choices=[('Bestuurder', 'Bestuurder'), ('Eigenaar', 'Eigenaar')], db_column='soort', max_length=10)),
            ],
            options={
                'db_table': 'vrzktijdautonietleden',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParticipantTravelAssistanceInsurance',
            fields=[
                ('participant', models.ForeignKey(db_column='passagierid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='members.nonmember')),
            ],
            options={
                'db_table': 'vrzkassistpassagier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_group_admin_id', models.CharField(max_length=6, null=True)),
                ('date', models.DateTimeField(blank=True)),
                ('declarant_city', models.CharField(blank=True, max_length=30, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=30, null=True)),
                ('date_of_accident', models.DateTimeField()),
                ('activity', models.CharField(max_length=1024)),
                ('activity_type', jsonfield.fields.JSONField(max_length=128)),
                ('location', models.CharField(blank=True, max_length=128, null=True)),
                ('used_transport', models.CharField(blank=True, max_length=30, null=True)),
                ('damage_type', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(max_length=1024)),
                ('involved_party_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('involved_party_description', models.CharField(blank=True, max_length=1024, null=True)),
                ('involved_party_birthdate', models.DateField(blank=True, null=True)),
                ('official_report_description', models.CharField(blank=True, max_length=1024, null=True)),
                ('pv_number', models.CharField(blank=True, max_length=30, null=True)),
                ('witness_name', models.CharField(blank=True, max_length=128, null=True)),
                ('witness_description', models.CharField(blank=True, max_length=1024, null=True)),
                ('leadership_description', models.CharField(blank=True, max_length=1024, null=True)),
                ('note', models.CharField(blank=True, max_length=1024, null=True)),
                ('case_number', models.CharField(blank=True, max_length=30, null=True)),
                ('declarant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('add_insuranceclaim_note', 'User can add a note to a claim'), ('view_insuranceclaim_note', 'Administrative users can view a claim note'), ('add_insuranceclaim_case_number', 'Users can add a claim case number'), ('view_insuranceclaim_case_number', 'Administrative users can view a claim case number'), ('list_insuranceclaims', 'User can view a list of claims'), ('view_insuranceclaimattachment_filename', 'User can view the filename of a claim attachment')],
            },
        ),
        migrations.CreateModel(
            name='ActivityInsurance',
            fields=[
                ('insurance_parent', models.OneToOneField(db_column='verzekeringsid', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='activity_child', serialize=False, to='insurances.baseinsurance')),
                ('nature', models.CharField(db_column='aardactiviteit', max_length=500)),
                ('_group_size', models.IntegerField(db_column='aantgroep', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)])),
                ('postcode', models.IntegerField(db_column='postcode', null=True)),
                ('city', models.CharField(db_column='gemeente', max_length=40)),
            ],
            options={
                'db_table': 'vrzktypeeenact',
                'managed': False,
            },
            bases=('insurances.baseinsurance',),
        ),
        migrations.CreateModel(
            name='EquipmentInsurance',
            fields=[
                ('insurance_parent', models.OneToOneField(db_column='verzekeringsid', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='equipment_child', serialize=False, to='insurances.baseinsurance')),
                ('nature', models.CharField(db_column='aardactiviteit', max_length=500)),
                ('postcode', models.IntegerField(blank=True, db_column='postcode', null=True)),
                ('city', models.CharField(blank=True, db_column='gemeente', max_length=40)),
                ('_country', models.CharField(blank=True, db_column='land', max_length=45)),
            ],
            options={
                'db_table': 'vrzktypemateriaal',
                'managed': False,
            },
            bases=('insurances.baseinsurance',),
        ),
        migrations.CreateModel(
            name='EventInsurance',
            fields=[
                ('insurance_parent', models.OneToOneField(db_column='verzekeringsid', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='event_child', serialize=False, to='insurances.baseinsurance')),
                ('nature', models.CharField(db_column='aardactiviteit', max_length=500)),
                ('event_size', models.IntegerField(choices=[(1, '1-500 (65,55 eur/dag)'), (2, '500-1000 (131,10 eur/dag)'), (3, '1000-1500 (163,88 eur/dag)'), (4, '1500-2500 (229,43 eur/dag)'), (5, 'meer dan 2500 (in overleg met Ethias)')], db_column='aantbezoekers', null=True)),
                ('postcode', models.IntegerField(db_column='postcode', null=True)),
                ('city', models.CharField(db_column='gemeente', max_length=40)),
            ],
            options={
                'db_table': 'vrzktypeevenement',
                'managed': False,
            },
            bases=('insurances.baseinsurance',),
        ),
        migrations.CreateModel(
            name='TemporaryInsurance',
            fields=[
                ('insurance_parent', models.OneToOneField(db_column='verzekeringsid', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='temporary_child', serialize=False, to='insurances.baseinsurance')),
                ('nature', models.CharField(db_column='aardactiviteit', max_length=500)),
                ('postcode', models.IntegerField(blank=True, db_column='postcode', null=True)),
                ('city', models.CharField(blank=True, db_column='gemeente', max_length=40)),
                ('_country', models.CharField(blank=True, db_column='land', max_length=45)),
            ],
            options={
                'db_table': 'vrzktypetijdact',
                'managed': False,
            },
            bases=('insurances.baseinsurance',),
        ),
        migrations.CreateModel(
            name='TemporaryVehicleInsurance',
            fields=[
                ('insurance_parent', models.OneToOneField(db_column='verzekeringsid', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='temporary_vehicle_child', serialize=False, to='insurances.baseinsurance')),
                ('_insurance_option', models.IntegerField(choices=[(1, 'omnium'), (2, 'reeds afgesloten omnium afdekken'), (3, 'huurvoertuigen'), (13, 'omnium + huurvoertuigen'), (23, 'reeds afgesloten omnium afdekken + huurvoertuigen')], db_column='keuze')),
                ('max_coverage', models.CharField(blank=True, choices=[('A', '247,89 EUR'), ('B', '495,79 EUR'), ('C', '743,68 EUR')], db_column='maxdekking', max_length=1, null=True)),
                ('_vehicle_type', models.CharField(blank=True, choices=[('PERSONENWAGEN', 'Personenwagen (maximum 5 inzittenden)'), ('MINIBUS', 'Minibus (maximum 8 inzittenden)'), ('VRACHTWAGEN', 'Vrachtwagen tot 3.5 ton (maximum 8 inzittenden)')], db_column='autotype', max_length=30, null=True)),
                ('_vehicle_brand', models.CharField(blank=True, db_column='automerk', max_length=15, null=True)),
                ('_vehicle_license_plate', models.CharField(blank=True, db_column='autokenteken', max_length=10, null=True)),
                ('_vehicle_construction_year', models.IntegerField(blank=True, db_column='autobouwjaar', null=True, validators=[django.core.validators.MinValueValidator(1900)])),
                ('_vehicle_chassis_number', models.CharField(db_column='autochassis', max_length=20)),
                ('_vehicle_trailer', models.CharField(choices=[('0', 'Geen'), ('2', '<750kg'), ('3', '>750kg')], db_column='aanhangwagen', default='0', max_length=1)),
            ],
            options={
                'db_table': 'vrzktypetijdauto',
                'managed': False,
            },
            bases=('insurances.baseinsurance',),
        ),
        migrations.CreateModel(
            name='TravelAssistanceInsurance',
            fields=[
                ('insurance_parent', models.OneToOneField(db_column='verzekeringsid', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='travel_assistance_child', serialize=False, to='insurances.baseinsurance')),
                ('_country', models.CharField(db_column='bestemmingsland', max_length=40)),
                ('_vehicle_type', models.CharField(blank=True, db_column='autotype', max_length=30, null=True)),
                ('_vehicle_brand', models.CharField(blank=True, db_column='automerk', max_length=15, null=True)),
                ('_vehicle_license_plate', models.CharField(blank=True, db_column='autokenteken', max_length=10, null=True)),
                ('_vehicle_construction_year', models.IntegerField(blank=True, db_column='autobouwjaar', null=True, validators=[django.core.validators.MinValueValidator(1900)])),
                ('_vehicle_trailer', models.IntegerField(blank=True, db_column='aanhangwagen', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
            ],
            options={
                'db_table': 'vrzktypeethiasassistance',
                'managed': False,
            },
            bases=('insurances.baseinsurance',),
        ),
        migrations.CreateModel(
            name='InsuranceDraft',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_draft_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('insurance_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='insurance_drafts', to='insurances.insurancetype')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceClaimVictim',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('last_name', models.CharField(max_length=25)),
                ('first_name', models.CharField(max_length=15)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('street', models.CharField(max_length=100)),
                ('number', models.CharField(max_length=5)),
                ('letter_box', models.CharField(blank=True, max_length=5)),
                ('postcode', models.IntegerField()),
                ('city', models.CharField(max_length=40)),
                ('email', models.EmailField(blank=True, max_length=60)),
                ('gender', models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male'), ('O', 'Other'), ('U', 'Unknown')], default='U', max_length=1, null=True)),
                ('legal_representative', models.CharField(blank=True, max_length=128, null=True)),
                ('group_admin_id', models.CharField(blank=True, db_column='ga_id', max_length=255, null=True)),
                ('non_member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='claim_victim', to='members.inuitsnonmember')),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceClaimAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='', validators=[inuits.files.validators.validate_file_extension])),
                ('content_type', models.CharField(max_length=100)),
                ('insurance_claim', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachment', to='insurances.insuranceclaim')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='insuranceclaim',
            name='victim',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='insurances.insuranceclaimvictim'),
        ),
        migrations.CreateModel(
            name='EventInsuranceAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='', validators=[inuits.files.validators.validate_file_extension])),
                ('content_type', models.CharField(max_length=100)),
                ('insurance', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachment', to='insurances.eventinsurance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CostVariable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=30)),
                ('value', models.DecimalField(decimal_places=5, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('insurance_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='cost_variables', to='insurances.insurancetype')),
            ],
            options={
                'unique_together': {('key', 'insurance_type')},
            },
        ),
        migrations.CreateModel(
            name='ActivityInsuranceAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='', validators=[inuits.files.validators.validate_file_extension])),
                ('content_type', models.CharField(max_length=100)),
                ('insurance', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachment', to='insurances.activityinsurance')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
